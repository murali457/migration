{"ast":null,"code":"import _slicedToArray from \"/home/murali/react_node/react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/murali/react_node/react/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Details from './components/Details.js';\nimport Userlist from './pro/Userlist';\nimport Dashboard from './pro/Dashboard';\nimport Indexx from './pro/Indexx';\nimport { CookiesProvider, useCookies, Cookies } from 'react-cookie';\nimport AuthApi from './AuthApi';\nconst cookies = new Cookies();\nconst GCC = cookies.get('name');\n\nfunction App() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        auth = _React$useState2[0],\n        setAuth = _React$useState2[1];\n\n  const Routes = () => {\n    const Auth = React.useContext(AuthApi); //if (GCC=='') {\n\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/start\",\n      component: Indexx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })); //}\n\n    if (GCC != '') {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/userlist\",\n        component: Userlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(AuthApi.Provider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n} // const Login=()=>{\n//     const Auth=React.useContext(AuthApi)\n//     const clickl = () =>{\n//        Auth.setAuth(true);\n//        Cookies.set(\"user\",\"login\");\n//     }\n//     return(\n//         <div>\n//             <h3>login page</h3>\n//             <button onClick={clickl}>login</button>\n//         </div>\n//     )\n// }\n// const DDashboard=()=>{\n//     const Auth=React.useContext(AuthApi)\n//     const clicklt = () =>{\n//       //Auth.setAuth(false);\n//       //Cookies.remove('user','login');\n//     }\n//     return(\n//         <div>\n//             <h3>Dashboard</h3>\n//             <button onClick={clicklt}>logout</button>\n//         </div>\n//     )\n// }\n// const ProtectedRoute=({auth,component:Component,...rest})=>{\n//     return(\n//         <Route \n//            {...rest}\n//            render={()=>GCC?(\n//                 <Component />\n//             ):\n//             (\n//                 <Redirect to=\"/login\" />\n//             )\n//          }        \n//         />  \n//     )\n// }\n// const ProtectedLogin=({auth,component:Component,...rest})=>{\n//     return(\n//         <Route \n//             {...rest}\n//             render={()=>!auth?(\n//                 <Component />\n//             ):\n//             (\n//                 <Redirect to=\"/DDashboard\" />\n//             )\n//          }       \n//         />  \n//     )\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/home/murali/react_node/react/src/App.js"],"names":["React","BrowserRouter","Router","Route","Link","Switch","Redirect","Details","Userlist","Dashboard","Indexx","CookiesProvider","useCookies","Cookies","AuthApi","cookies","GCC","get","App","useState","auth","setAuth","Routes","Auth","useContext"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,KAAhC,EAAsCC,IAAtC,EAA2CC,MAA3C,EAAmDC,QAAnD,QAAkE,kBAAlE;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,EAAyBC,UAAzB,EAAoCC,OAApC,QAAmD,cAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AACA,MAAMG,GAAG,GAACD,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAV;;AAGA,SAASC,GAAT,GAAe;AAAA,0BACUlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CADV;AAAA;AAAA,QACJC,IADI;AAAA,QACCC,OADD;;AAEX,QAAMC,MAAM,GAAC,MAAI;AACb,UAAMC,IAAI,GAACvB,KAAK,CAACwB,UAAN,CAAiBV,OAAjB,CAAX,CADa,CAEb;;AACA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEL,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAEQ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ,CAHa,CASjB;;AACA,QAAIM,GAAG,IAAE,EAAT,EAAa;AACT,aACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACS,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAER,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT,CADJ;AAKH;AACH,GAjBE;;AAkBF,SACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADE;AAUD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeU,GAAf","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router,Route,Link,Switch, Redirect} from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Details from './components/Details.js'\nimport Userlist from './pro/Userlist';\nimport Dashboard from './pro/Dashboard';\nimport Indexx from './pro/Indexx';\nimport { CookiesProvider,useCookies,Cookies } from 'react-cookie';\nimport AuthApi from './AuthApi';\nconst cookies = new Cookies();\nconst GCC=cookies.get('name');\n \n \nfunction App() {\n    const [auth,setAuth]=React.useState(false);\n    const Routes=()=>{\n        const Auth=React.useContext(AuthApi);\n        //if (GCC=='') {\n        return(\n            <Switch>\n                    <Route exact path=\"/\" component={Dashboard} />\n                    <Route path=\"/start\" component={Indexx} />\n            </Switch>\n        )\n    //}\n    if (GCC!='') {\n        return(\n            <Switch>\n                     <Route path=\"/userlist\" component={Userlist} />\n            </Switch>\n        )\n    }\n }\n  return (\n<div>\n        \n        <AuthApi.Provider > \n            <Router>\n                <Routes />\n            </Router>\n        </AuthApi.Provider> \n</div>\n  );\n}\n\n// const Login=()=>{\n//     const Auth=React.useContext(AuthApi)\n//     const clickl = () =>{\n//        Auth.setAuth(true);\n//        Cookies.set(\"user\",\"login\");\n//     }\n//     return(\n//         <div>\n//             <h3>login page</h3>\n//             <button onClick={clickl}>login</button>\n//         </div>\n//     )\n// }\n// const DDashboard=()=>{\n//     const Auth=React.useContext(AuthApi)\n//     const clicklt = () =>{\n//       //Auth.setAuth(false);\n//       //Cookies.remove('user','login');\n//     }\n//     return(\n//         <div>\n//             <h3>Dashboard</h3>\n//             <button onClick={clicklt}>logout</button>\n//         </div>\n//     )\n// }\n// const ProtectedRoute=({auth,component:Component,...rest})=>{\n//     return(\n//         <Route \n//            {...rest}\n//            render={()=>GCC?(\n//                 <Component />\n//             ):\n//             (\n//                 <Redirect to=\"/login\" />\n//             )\n//          }        \n//         />  \n//     )\n// }\n// const ProtectedLogin=({auth,component:Component,...rest})=>{\n//     return(\n//         <Route \n//             {...rest}\n//             render={()=>!auth?(\n//                 <Component />\n//             ):\n//             (\n//                 <Redirect to=\"/DDashboard\" />\n//             )\n//          }       \n//         />  \n//     )\n// }\nexport default App;\n"]},"metadata":{},"sourceType":"module"}