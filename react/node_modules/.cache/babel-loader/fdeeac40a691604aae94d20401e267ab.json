{"ast":null,"code":"var _jsxFileName = \"/home/murali/react_node/react/src/pro/Userlist.js\";\nimport React from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { CookiesProvider, useCookies, Cookies } from 'react-cookie';\nimport { Route, Link, Switch, Redirect, browserHistory } from 'react-router-dom';\nimport Indexx from './Indexx';\nconst cookies = new Cookies();\n\nclass Userlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getlistfun = _ => {\n      fetch('http://localhost:4000/getlist').then(response => response.json()).then(response => this.setState({\n        getlist: response.data\n      })).catch(e => console.log(e));\n    };\n\n    this.rendergetlist = ({\n      ex_id,\n      name\n    }) => React.createElement(\"div\", {\n      key: ex_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, name);\n\n    this.close = () => {\n      cookies.remove('name');\n      localStorage.removeItem(\"token\");\n      this.props.history.push('/start');\n    };\n\n    const GCC = cookies.get('name');\n    const token = localStorage.getItem(\"token\");\n    let loginn = true;\n\n    if (token == null) {\n      loginn = false;\n    }\n\n    this.state = {\n      getlist: [],\n      loginn\n    };\n  }\n\n  componentDidMount() {\n    this.getlistfun();\n  }\n\n  render() {\n    if (this.state.loginn === false) {\n      return React.createElement(Redirect, {\n        to: \"/start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    const getlist = this.state.getlist;\n    return React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, getlist.map(this.rendergetlist)));\n  }\n\n}\n\nexport default Userlist;","map":{"version":3,"sources":["/home/murali/react_node/react/src/pro/Userlist.js"],"names":["React","jwt_decode","CookiesProvider","useCookies","Cookies","Route","Link","Switch","Redirect","browserHistory","Indexx","cookies","Userlist","Component","constructor","props","getlistfun","_","fetch","then","response","json","setState","getlist","data","catch","e","console","log","rendergetlist","ex_id","name","close","remove","localStorage","removeItem","history","push","GCC","get","token","getItem","loginn","state","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAAyBC,UAAzB,EAAoCC,OAApC,QAAmD,cAAnD;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAuCC,cAAvC,QAA6D,kBAA7D;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,MAAMC,OAAO,GAAG,IAAIP,OAAJ,EAAhB;;AACA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAgBlBC,UAhBkB,GAgBLC,CAAC,IAAG;AACZC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADf,EAEAF,IAFA,CAEKC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApB,OAAd,CAFjB,EAGAC,KAHA,CAGMC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAHT;AAIJ,KArBiB;;AAAA,SAsBlBG,aAtBkB,GAsBJ,CAAC;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAD,KAAgB;AAAK,MAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBC,IAAlB,CAtBZ;;AAAA,SAuBlBC,KAvBkB,GAuBV,MAAI;AACRrB,MAAAA,OAAO,CAACsB,MAAR,CAAe,MAAf;AACAC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,WAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,KA3BiB;;AAEd,UAAMC,GAAG,GAAC3B,OAAO,CAAC4B,GAAR,CAAY,MAAZ,CAAV;AACA,UAAMC,KAAK,GAACN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAIC,MAAM,GAAC,IAAX;;AACA,QAAGF,KAAK,IAAI,IAAZ,EAAiB;AACbE,MAAAA,MAAM,GAAC,KAAP;AACH;;AACD,SAAKC,KAAL,GAAW;AACPpB,MAAAA,OAAO,EAAC,EADD;AAEPmB,MAAAA;AAFO,KAAX;AAIH;;AACDE,EAAAA,iBAAiB,GAAE;AACf,SAAK5B,UAAL;AACH;;AAaD6B,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKF,KAAL,CAAWD,MAAX,KAAsB,KAAzB,EAAgC;AAC5B,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAHG,UAIGnB,OAJH,GAIY,KAAKoB,KAJjB,CAIGpB,OAJH;AAKJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OAAO,CAACuB,GAAR,CAAY,KAAKjB,aAAjB,CADL,CADJ,CADJ;AA2BH;;AA7DiC;;AA+DtC,eAAejB,QAAf","sourcesContent":["import React from 'react'\nimport jwt_decode from 'jwt-decode'\nimport { CookiesProvider,useCookies,Cookies } from 'react-cookie';\nimport { Route, Link, Switch, Redirect,browserHistory } from 'react-router-dom';\nimport Indexx from './Indexx';\nconst cookies = new Cookies();\nclass Userlist extends React.Component{\n    constructor(props){\n        super(props)\n        const GCC=cookies.get('name');\n        const token=localStorage.getItem(\"token\")\n        let loginn=true;\n        if(token == null){\n            loginn=false\n        }\n        this.state={\n            getlist:[],\n            loginn\n        }\n    }\n    componentDidMount(){\n        this.getlistfun();\n    }\n    getlistfun = _ =>{\n         fetch('http://localhost:4000/getlist')\n        .then(response=>response.json())\n        .then(response => this.setState({ getlist: response.data }))\n        .catch(e=>console.log(e));\n    }\n    rendergetlist=({ex_id,name})=><div key={ex_id}>{name}</div>\n    close = ()=>{\n        cookies.remove('name');\n        localStorage.removeItem(\"token\")\n        this.props.history.push('/start');\n    }\n    render(){\n        if(this.state.loginn === false) {\n            return <Redirect to=\"/start\" />\n        }\n        const {getlist}=this.state;\n        return(\n            <body>\n                <div>\n                    {getlist.map(this.rendergetlist)}\n                </div>\n                {/* <div class=\"container\"><br />\n                    <button class=\"btn btn-danger\" onClick={this.close}>Close</button>\n                    <h2>Details</h2>\n                    <table class=\"table table-striped\" id=\"mytable\">\n                        <thead>\n                            <tr>\n                                <th>S.no</th>\n                                <th>Name</th>\n                                <th>Source</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1</td>\n                                <td>mmm</td>\n                                <td>99998</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div> */}\n            </body>\n        );\n    }\n}\nexport default Userlist;"]},"metadata":{},"sourceType":"module"}