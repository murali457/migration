{"ast":null,"code":"/*!\n * env\n * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies\n */\nvar path = require('path');\n/**\n * Exports\n */\n\n\nexports = module.exports = createEnv;\n/**\n * Env Manager\n */\n\nfunction Env(envfile) {\n  this.envfile = path.join(process.cwd(), envfile || 'env.json');\n  this.evars = path.existsSync(this.envfile) ? require(this.envfile) : {};\n  this.id = process.env['ENV_ID'];\n}\n/**\n * Verify environment variables\n *\n * @param fn callback\n * @api public\n */\n\n\nEnv.prototype.ok = function (fn) {\n  for (var p in this.evars) {\n    if (!process.env[p]) {\n      var error = new Error(p + ' not defined');\n      console.error(error);\n      fn(error);\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Environment variable getter\n *\n * @param name\n * @api public\n */\n\n\nEnv.prototype.get = function (name) {\n  // get one\n  if (arguments.length === 1) return process.env[name]; // get all, multi\n\n  var evars = arguments.length === 0 ? Object.keys(this.evars) : Array.prototype.slice.call(arguments);\n  return evars.reduce(function (curr, x) {\n    curr[x] = process.env[x];\n    return curr;\n  }, {});\n};\n/**\n * Environment variable setter\n *\n * @param name\n * @param value\n * @api public\n */\n\n\nEnv.prototype.set = function (name, value) {\n  process.env[name] = value;\n};\n/**\n * Delete environment variable(s)\n *\n * @param name\n * @api public\n */\n\n\nEnv.prototype.del = function (name) {\n  // get one\n  if (arguments.length === 1) {\n    delete process.env[name];\n  } // get all, multi\n\n\n  var evars = arguments.length === 0 ? this.evars : Array.prototype.slice.call(arguments);\n\n  for (var p in evars) {\n    delete process.env[p];\n  }\n};\n/**\n * Instantiate Env\n */\n\n\nfunction createEnv(envfile) {\n  return new Env(envfile);\n}","map":{"version":3,"sources":["/home/murali/react_node/react/node_modules/env/lib/env.js"],"names":["path","require","exports","module","createEnv","Env","envfile","join","process","cwd","evars","existsSync","id","env","prototype","ok","fn","p","error","Error","console","get","name","arguments","length","Object","keys","Array","slice","call","reduce","curr","x","set","value","del"],"mappings":"AAAA;;;;;;AAMA;;;AAIA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAEA;;;;;AAIAC,OAAO,GAAGC,MAAM,CAACD,OAAP,GAAiBE,SAA3B;AAEA;;;;AAIA,SAASC,GAAT,CAAcC,OAAd,EAAuB;AACrB,OAAKA,OAAL,GAAeN,IAAI,CAACO,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyBH,OAAO,IAAI,UAApC,CAAf;AACA,OAAKI,KAAL,GAAcV,IAAI,CAACW,UAAL,CAAgB,KAAKL,OAArB,CAAD,GAAkCL,OAAO,CAAC,KAAKK,OAAN,CAAzC,GAA0D,EAAvE;AACA,OAAKM,EAAL,GAAUJ,OAAO,CAACK,GAAR,CAAY,QAAZ,CAAV;AACD;AAED;;;;;;;;AAOAR,GAAG,CAACS,SAAJ,CAAcC,EAAd,GAAmB,UAAUC,EAAV,EAAc;AAC/B,OAAK,IAAIC,CAAT,IAAc,KAAKP,KAAnB,EAA0B;AACxB,QAAI,CAACF,OAAO,CAACK,GAAR,CAAYI,CAAZ,CAAL,EAAqB;AACnB,UAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,CAAC,GAAG,cAAd,CAAZ;AACAG,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACAF,MAAAA,EAAE,CAACE,KAAD,CAAF;AACA,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAVD;AAYA;;;;;;;;AAOAb,GAAG,CAACS,SAAJ,CAAcO,GAAd,GAAoB,UAAUC,IAAV,EAAgB;AAClC;AACA,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B,OAAOhB,OAAO,CAACK,GAAR,CAAYS,IAAZ,CAAP,CAFM,CAIlC;;AACA,MAAIZ,KAAK,GAAIa,SAAS,CAACC,MAAV,KAAqB,CAAtB,GAA2BC,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,CAA3B,GAAqDiB,KAAK,CAACb,SAAN,CAAgBc,KAAhB,CAAsBC,IAAtB,CAA2BN,SAA3B,CAAjE;AACA,SAAOb,KAAK,CAACoB,MAAN,CAAa,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AACrCD,IAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUxB,OAAO,CAACK,GAAR,CAAYmB,CAAZ,CAAV;AACA,WAAOD,IAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID,CAVD;AAYA;;;;;;;;;AAQA1B,GAAG,CAACS,SAAJ,CAAcmB,GAAd,GAAoB,UAAUX,IAAV,EAAgBY,KAAhB,EAAuB;AACzC1B,EAAAA,OAAO,CAACK,GAAR,CAAYS,IAAZ,IAAoBY,KAApB;AACD,CAFD;AAIA;;;;;;;;AAOA7B,GAAG,CAACS,SAAJ,CAAcqB,GAAd,GAAoB,UAAUb,IAAV,EAAgB;AAClC;AACA,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,WAAOhB,OAAO,CAACK,GAAR,CAAYS,IAAZ,CAAP;AACD,GAJiC,CAMlC;;;AACA,MAAIZ,KAAK,GAAIa,SAAS,CAACC,MAAV,KAAqB,CAAtB,GAA2B,KAAKd,KAAhC,GAAwCiB,KAAK,CAACb,SAAN,CAAgBc,KAAhB,CAAsBC,IAAtB,CAA2BN,SAA3B,CAApD;;AACA,OAAK,IAAIN,CAAT,IAAcP,KAAd,EAAqB;AACnB,WAAOF,OAAO,CAACK,GAAR,CAAYI,CAAZ,CAAP;AACD;AACF,CAXD;AAaA;;;;;AAIA,SAASb,SAAT,CAAoBE,OAApB,EAA6B;AAC3B,SAAO,IAAID,GAAJ,CAAQC,OAAR,CAAP;AACD","sourcesContent":["/*!\n * env\n * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies\n */\n\nvar path = require('path')\n\n/**\n * Exports\n */\n\nexports = module.exports = createEnv;\n\n/**\n * Env Manager\n */\n\nfunction Env (envfile) {\n  this.envfile = path.join(process.cwd(), envfile || 'env.json')\n  this.evars = (path.existsSync(this.envfile)) ? require(this.envfile) : {}\n  this.id = process.env['ENV_ID']\n}\n\n/**\n * Verify environment variables\n *\n * @param fn callback\n * @api public\n */\n\nEnv.prototype.ok = function (fn) {\n  for (var p in this.evars) {\n    if (!process.env[p]) {\n      var error = new Error(p + ' not defined')\n      console.error(error)\n      fn(error)\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Environment variable getter\n *\n * @param name\n * @api public\n */\n\nEnv.prototype.get = function (name) {\n  // get one\n  if (arguments.length === 1) return process.env[name]\n\n  // get all, multi\n  var evars = (arguments.length === 0) ? Object.keys(this.evars) : Array.prototype.slice.call(arguments)\n  return evars.reduce(function (curr, x) {\n    curr[x] = process.env[x]\n    return curr\n  }, {})\n}\n\n/**\n * Environment variable setter\n *\n * @param name\n * @param value\n * @api public\n */\n\nEnv.prototype.set = function (name, value) {\n  process.env[name] = value\n}\n\n/**\n * Delete environment variable(s)\n *\n * @param name\n * @api public\n */\n\nEnv.prototype.del = function (name) {\n  // get one\n  if (arguments.length === 1) {\n    delete process.env[name]\n  }\n\n  // get all, multi\n  var evars = (arguments.length === 0) ? this.evars : Array.prototype.slice.call(arguments)\n  for (var p in evars) {\n    delete process.env[p]\n  }\n}\n\n/**\n * Instantiate Env\n */\n\nfunction createEnv (envfile) {\n  return new Env(envfile)\n}"]},"metadata":{},"sourceType":"script"}