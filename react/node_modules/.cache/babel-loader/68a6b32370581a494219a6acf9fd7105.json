{"ast":null,"code":"var _jsxFileName = \"/home/murali/react_node/gsuite-0365/react/src/pro/Test.js\";\nimport React from 'react';\nimport 'react-dropdown/style.css';\nimport 'react-table/react-table.css';\nimport ReactTable from \"react-table\";\nimport { CSVLink } from \"react-csv\";\nconst columns = [{\n  Header: 'name',\n  accessor: 'name' // String-based value accessors!\n\n}, {\n  Header: 'age',\n  accessor: 'age'\n}];\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.download = this.download.bind(this);\n    this.state = {\n      tableproperties: {\n        allData: [{\n          \"name\": \"ramesh\",\n          \"age\": \"12\"\n        }, {\n          \"name\": \"bill\",\n          \"age\": \"13\"\n        }, {\n          \"name\": \"arun\",\n          \"age\": \"9\"\n        }, {\n          \"name\": \"kathy\",\n          \"age\": \"21\"\n        }]\n      },\n      dataToDownload: []\n    };\n  }\n\n  download(event) {\n    const currentRecords = this.reactTable.getResolvedState().sortedData;\n    var data_to_download = [];\n\n    for (var index = 0; index < currentRecords.length; index++) {\n      let record_to_download = {};\n\n      for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n        record_to_download[columns[colIndex].Header] = currentRecords[index][columns[colIndex].accessor];\n      }\n\n      data_to_download.push(record_to_download);\n    }\n\n    this.setState({\n      dataToDownload: data_to_download\n    }, () => {\n      // click the CSVLink component to trigger the CSV download\n      this.csvLink.link.click();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.download,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Download\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CSVLink, {\n      data: this.state.dataToDownload,\n      filename: \"data.csv\",\n      className: \"hidden\",\n      ref: r => this.csvLink = r,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      ref: r => this.reactTable = r,\n      data: this.state.tableproperties.allData,\n      columns: columns,\n      filterable: true,\n      defaultFilterMethod: (filter, row) => String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/home/murali/react_node/gsuite-0365/react/src/pro/Test.js"],"names":["React","ReactTable","CSVLink","columns","Header","accessor","Test","Component","constructor","props","download","bind","state","tableproperties","allData","dataToDownload","event","currentRecords","reactTable","getResolvedState","sortedData","data_to_download","index","length","record_to_download","colIndex","push","setState","csvLink","link","click","render","r","filter","row","String","id","toLowerCase","includes","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'react-dropdown/style.css'\nimport 'react-table/react-table.css'\nimport ReactTable from \"react-table\";\nimport {CSVLink} from \"react-csv\";\n\nconst columns = [\n   {\n       Header: 'name',\n       accessor: 'name', // String-based value accessors!\n   },\n   {\n       Header: 'age',\n       accessor: 'age',\n\n  }]\nclass Test extends React.Component {\n    constructor(props) {\n       super(props);\n       this.download = this.download.bind(this);\n       this.state = {\n          tableproperties: {\n             allData: [\n                {\"name\": \"ramesh\",\"age\": \"12\"},\n                {\"name\": \"bill\",\"age\": \"13\"},\n                {\"name\": \"arun\",\"age\": \"9\"},\n                {\"name\": \"kathy\",\"age\": \"21\"}\n             ]\n          },\n          dataToDownload: []\n       };\n    }\n\n   download(event) {\n      const currentRecords = this.reactTable.getResolvedState().sortedData;\n      var data_to_download = []\n      for (var index = 0; index < currentRecords.length; index++) {\n         let record_to_download = {}\n         for(var colIndex = 0; colIndex < columns.length ; colIndex ++) {\n            record_to_download[columns[colIndex].Header] = currentRecords[index][columns[colIndex].accessor]\n         }\n         data_to_download.push(record_to_download)\n      }\n      this.setState({ dataToDownload: data_to_download }, () => {\n         // click the CSVLink component to trigger the CSV download\n         this.csvLink.link.click()\n      })\n    } \n\n    render() {\n       return <div>\n                 <div>\n                    <button onClick={this.download}>\n                        Download\n                    </button>\n                 </div>\n                 <div>\n                    <CSVLink\n                        data={this.state.dataToDownload}\n                        filename=\"data.csv\"\n                        className=\"hidden\"\n                        ref={(r) => this.csvLink = r}\n                        target=\"_blank\"/>\n\n                 </div>\n                 <div>\n                    <ReactTable ref={(r) => this.reactTable = r}\n                                data={this.state.tableproperties.allData} columns={columns} filterable\n                                defaultFilterMethod={(filter, row) =>\n                                    String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase())}\n                    />\n                 </div>\n              </div>\n    }\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}